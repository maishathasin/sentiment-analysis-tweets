# -*- coding: utf-8 -*-
"""sentimental_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12-LyEvrtfzzPlx0bTd_uX_So2fBivh-C
"""

import tweepy
from textblob import TextBlob
from wordcloud import WordCloud,STOPWORDS
import pandas as pd
import numpy as np
import re
import matplotlib.pyplot as plt
plt.style.use('fivethirtyeight')


#twitter api credntials
consumer_key = 'GFxHrGjMrzpwvy8ONzzaiqgHB'
consumer_secret = '6DkoZoTXXvUXJLDftl0xr1zbumqCg1p8fySv54Ot2KjEesXCNh'
access_token = '1456329691-Y2MzmZZADVhfpkxY9lkUB9TsHHgpEplVsGaBzXS'
access_token_secret = 'KDewNgkkU6KayjB8RJ4h6tOlEutiQ6iMx8ko7gA0dWv7p'

#authenticate
authenticate = tweepy.OAuthHandler(consumer_key,consumer_secret)

#access token
authenticate.set_access_token(access_token,access_token_secret)

#create api object
twts = tweepy.API(authenticate,wait_on_rate_limit=True)

#extract hundred tweets 
posts = api.user_timeline(id = "@ronatun", count = 100, lang = "en", tweet_mode = "extended")

#print the last 5 tweets from the account 
print("show twts\n")
for tweets in posts[0:5]:
  print(tweets.full_text + '\n')



#create a dataframe 
df = pd.DataFrame([tweets.full_text for tweets in posts], columns = ['tweets'])
df.head()

# clean the text
def clean (text):
  text = re.sub(r'@[A-Za-z0-9_]+','',text)#remove @ mentions
  text = re.sub(r'@[_]+','',text)#remove @ mentions
  text = re.sub(r'#', '', text)#remove the '#' symbol
  text = re.sub(r'RT[\s]+','',text)
  text = re.sub(r'https?:\/\/\S+','',text)
  text = re.sub(r'ur','',text)
  text = re.sub(r'bc','',text)
  text = re.sub(r'thru','',text)
  text = re.sub(r'it','',text)
  text = re.sub(r'IT','',text)
  text = re.sub(r'It','',text)
  text = re.sub(r'know','',text)
  text = re.sub(r'IM','',text)
  text = re.sub(r'im','',text)


  return text

df['tweets']= df['tweets'].apply(clean)
df

def subjectivity(text):
  return TextBlob(text).sentiment.subjectivity

def polarity(text):
  return TextBlob(text).sentiment.polarity

df['subjectivity']= df['tweets'].apply(subjectivity)
df['polarity']= df['tweets'].apply(polarity)
df

#word cloud
stopwords = set(STOPWORDS) 
allwords = ''.join([twts for twts in df['tweets']])
wordCloud = WordCloud(width = 500, height = 300, stopwords = stopwords, random_state = 20, max_font_size = 119).generate(allwords)
plt.imshow(wordCloud,interpolation = "bilinear")
plt.axis('off')
plt.show()

def analysis(score):
  if score < 0:
    return 'Negative'
  elif score == 0:
    return 'Neutral'
  else:
    return 'Positive'

df['analysis'] = df['polarity'].apply(analysis)
df

#plot the polarity and subjectivity 
plt.figure(figsize = (8,6))
for i in range(0,df.shape[0]):
  plt.scatter(df['polarity'][i],df['subjectivity'][i],color= 'Pink')

plt.title('analysis')
plt.xlabel('Polarity')
plt.ylabel('Subjectivity')
plt.show()
